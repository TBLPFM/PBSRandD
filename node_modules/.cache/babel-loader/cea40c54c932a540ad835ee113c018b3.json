{"ast":null,"code":"import { OLYMPIC_SPORTS, OLYMPIC_COUNTRIES } from \"./olympic_lists.js\";\nexport const columnDefs = [{\n  headerName: \"Athlete (simpleEditor)\",\n  field: \"athlete\",\n  cellEditor: \"simpleEditor\"\n}, {\n  headerName: \"Sport (Validation)\",\n  field: \"sport\",\n  cellEditor: \"asyncValidationEditor\",\n  cellEditorParams: {\n    condition: value => OLYMPIC_SPORTS.includes(value)\n  }\n}, {\n  headerName: \"Country (autoComplete)\",\n  field: \"country\",\n  cellEditor: \"autoCompleteEditor\",\n  cellEditorParams: {\n    options: OLYMPIC_COUNTRIES\n  }\n}, {\n  headerName: \"Date (Datepicker)\",\n  field: \"date\",\n  cellEditor: \"dateEditor\",\n  filter: \"agDateColumnFilter\",\n  filterParams: {\n    clearButton: true,\n    suppressAndOrCondition: true,\n    comparator: function (filterLocalDateAtMidnight, cellValue) {\n      var dateAsString = cellValue;\n      var dateParts = dateAsString.split(\"/\");\n      var cellDate = new Date(Number(dateParts[2]), Number(dateParts[1]) - 1, Number(dateParts[0]));\n\n      if (filterLocalDateAtMidnight.getTime() === cellDate.getTime()) {\n        return 0;\n      }\n\n      if (cellDate < filterLocalDateAtMidnight) {\n        return -1;\n      }\n\n      if (cellDate > filterLocalDateAtMidnight) {\n        return 1;\n      }\n    }\n  }\n}, {\n  headerName: \"\",\n  colId: \"actions\",\n  cellRenderer: \"actionsRenderer\",\n  editable: false,\n  filter: false,\n  minWidth: 220\n}];\nexport const defaultColDef = {\n  editable: true,\n  resizable: true,\n  filter: true,\n  floatingFilter: true,\n  suppressKeyboardEvent: params => params.editing\n};","map":{"version":3,"sources":["D:/PBSRandD_React/PBSRandD/src/columns.js"],"names":["OLYMPIC_SPORTS","OLYMPIC_COUNTRIES","columnDefs","headerName","field","cellEditor","cellEditorParams","condition","value","includes","options","filter","filterParams","clearButton","suppressAndOrCondition","comparator","filterLocalDateAtMidnight","cellValue","dateAsString","dateParts","split","cellDate","Date","Number","getTime","colId","cellRenderer","editable","minWidth","defaultColDef","resizable","floatingFilter","suppressKeyboardEvent","params","editing"],"mappings":"AAAA,SAASA,cAAT,EAAyBC,iBAAzB,QAAkD,oBAAlD;AAEA,OAAO,MAAMC,UAAU,GAAG,CACxB;AACEC,EAAAA,UAAU,EAAE,wBADd;AAEEC,EAAAA,KAAK,EAAE,SAFT;AAGEC,EAAAA,UAAU,EAAE;AAHd,CADwB,EAMxB;AACEF,EAAAA,UAAU,EAAE,oBADd;AAEEC,EAAAA,KAAK,EAAE,OAFT;AAGEC,EAAAA,UAAU,EAAE,uBAHd;AAIEC,EAAAA,gBAAgB,EAAE;AAChBC,IAAAA,SAAS,EAAEC,KAAK,IAAIR,cAAc,CAACS,QAAf,CAAwBD,KAAxB;AADJ;AAJpB,CANwB,EAcxB;AACEL,EAAAA,UAAU,EAAE,wBADd;AAEEC,EAAAA,KAAK,EAAE,SAFT;AAGEC,EAAAA,UAAU,EAAE,oBAHd;AAIEC,EAAAA,gBAAgB,EAAE;AAChBI,IAAAA,OAAO,EAAET;AADO;AAJpB,CAdwB,EAsBxB;AACEE,EAAAA,UAAU,EAAE,mBADd;AAEEC,EAAAA,KAAK,EAAE,MAFT;AAGEC,EAAAA,UAAU,EAAE,YAHd;AAIEM,EAAAA,MAAM,EAAE,oBAJV;AAKEC,EAAAA,YAAY,EAAE;AACZC,IAAAA,WAAW,EAAE,IADD;AAEZC,IAAAA,sBAAsB,EAAE,IAFZ;AAGZC,IAAAA,UAAU,EAAE,UAASC,yBAAT,EAAoCC,SAApC,EAA+C;AACzD,UAAIC,YAAY,GAAGD,SAAnB;AACA,UAAIE,SAAS,GAAGD,YAAY,CAACE,KAAb,CAAmB,GAAnB,CAAhB;AACA,UAAIC,QAAQ,GAAG,IAAIC,IAAJ,CACbC,MAAM,CAACJ,SAAS,CAAC,CAAD,CAAV,CADO,EAEbI,MAAM,CAACJ,SAAS,CAAC,CAAD,CAAV,CAAN,GAAuB,CAFV,EAGbI,MAAM,CAACJ,SAAS,CAAC,CAAD,CAAV,CAHO,CAAf;;AAKA,UAAIH,yBAAyB,CAACQ,OAA1B,OAAwCH,QAAQ,CAACG,OAAT,EAA5C,EAAgE;AAC9D,eAAO,CAAP;AACD;;AACD,UAAIH,QAAQ,GAAGL,yBAAf,EAA0C;AACxC,eAAO,CAAC,CAAR;AACD;;AACD,UAAIK,QAAQ,GAAGL,yBAAf,EAA0C;AACxC,eAAO,CAAP;AACD;AACF;AApBW;AALhB,CAtBwB,EAkDxB;AACEb,EAAAA,UAAU,EAAE,EADd;AAEEsB,EAAAA,KAAK,EAAE,SAFT;AAGEC,EAAAA,YAAY,EAAE,iBAHhB;AAIEC,EAAAA,QAAQ,EAAE,KAJZ;AAKEhB,EAAAA,MAAM,EAAE,KALV;AAMEiB,EAAAA,QAAQ,EAAE;AANZ,CAlDwB,CAAnB;AA4DP,OAAO,MAAMC,aAAa,GAAG;AAC3BF,EAAAA,QAAQ,EAAE,IADiB;AAE3BG,EAAAA,SAAS,EAAE,IAFgB;AAG3BnB,EAAAA,MAAM,EAAE,IAHmB;AAI3BoB,EAAAA,cAAc,EAAE,IAJW;AAK3BC,EAAAA,qBAAqB,EAAEC,MAAM,IAAIA,MAAM,CAACC;AALb,CAAtB","sourcesContent":["import { OLYMPIC_SPORTS, OLYMPIC_COUNTRIES } from \"./olympic_lists.js\";\n\nexport const columnDefs = [\n  {\n    headerName: \"Athlete (simpleEditor)\",\n    field: \"athlete\",\n    cellEditor: \"simpleEditor\"\n  },\n  {\n    headerName: \"Sport (Validation)\",\n    field: \"sport\",\n    cellEditor: \"asyncValidationEditor\",\n    cellEditorParams: {\n      condition: value => OLYMPIC_SPORTS.includes(value)\n    }\n  },\n  {\n    headerName: \"Country (autoComplete)\",\n    field: \"country\",\n    cellEditor: \"autoCompleteEditor\",\n    cellEditorParams: {\n      options: OLYMPIC_COUNTRIES\n    }\n  },\n  {\n    headerName: \"Date (Datepicker)\",\n    field: \"date\",\n    cellEditor: \"dateEditor\",\n    filter: \"agDateColumnFilter\",\n    filterParams: {\n      clearButton: true,\n      suppressAndOrCondition: true,\n      comparator: function(filterLocalDateAtMidnight, cellValue) {\n        var dateAsString = cellValue;\n        var dateParts = dateAsString.split(\"/\");\n        var cellDate = new Date(\n          Number(dateParts[2]),\n          Number(dateParts[1]) - 1,\n          Number(dateParts[0])\n        );\n        if (filterLocalDateAtMidnight.getTime() === cellDate.getTime()) {\n          return 0;\n        }\n        if (cellDate < filterLocalDateAtMidnight) {\n          return -1;\n        }\n        if (cellDate > filterLocalDateAtMidnight) {\n          return 1;\n        }\n      }\n    }\n  },\n  {\n    headerName: \"\",\n    colId: \"actions\",\n    cellRenderer: \"actionsRenderer\",\n    editable: false,\n    filter: false,\n    minWidth: 220\n  }\n];\n\nexport const defaultColDef = {\n  editable: true,\n  resizable: true,\n  filter: true,\n  floatingFilter: true,\n  suppressKeyboardEvent: params => params.editing\n};\n"]},"metadata":{},"sourceType":"module"}